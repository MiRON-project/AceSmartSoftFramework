//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain Version 0.10.12
// The SmartSoft Toolchain has been developed by:
//
// ZAFH Servicerobotic Ulm
// Christian Schlegel (schlegel@hs-ulm.de)
// Alex Lotz (lotz@hs-ulm.de)
// University of Applied Sciences
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// smart-robotics.sourceforge.net
//
// This file is generated once. Modify this file to your needs.
// If you want the toolchain to re-generate this file, please
// delete it before running the code generator.
//--------------------------------------------------------------------------

// --------------------------------------------------------------------------
//
//  Copyright (C) 2014 Alex Lotz
//
//        lotz@hs-ulm.de
//
//        Prof. Dr. Christian Schlegel
//        University of Applied Sciences
//        Prittwitzstr. 10
//        D-89075 Ulm
//        Germany
//
//
//  This file is part of ACE/SmartSoft.
//
//  ACE/SmartSoft is free software: you can redistribute it and/or modify
//  it under the terms of the GNU Lesser General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  ACE/SmartSoft is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public License
//  along with ACE/SmartSoft.  If not, see <http://www.gnu.org/licenses/>.
//
// --------------------------------------------------------------------------


#include "smartCommParameterResponse.hh"

/*
void CommParameterResponse::get(ACE_Message_Block *&msg) const
{
	ACE_OutputCDR cdr(ACE_DEFAULT_CDR_BUFSIZE);

	cdr << idl_CommParameterResponse.response;

	msg = cdr.begin()->duplicate();
}

void CommParameterResponse::set(const ACE_Message_Block *msg)
{
	ACE_InputCDR cdr(msg);

	cdr >> idl_CommParameterResponse.response;
}
*/
void SmartACE::CommParameterResponse::to_ostream(std::ostream &os) const
{
  os << "CommParameterResponse(";
  os << getResponse();
  os << ")";
}

ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const SmartACE::CommParameterResponse &obj)
{
	ACE_CDR::Boolean good_bit = true;

	good_bit = good_bit && cdr << static_cast<ACE_CDR::Long>(obj.data.response);

	return good_bit;
}
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, SmartACE::CommParameterResponse &obj)
{
	ACE_CDR::Boolean good_bit = true;

	good_bit = good_bit && cdr.read_long(obj.data.response);

	return good_bit;
}
